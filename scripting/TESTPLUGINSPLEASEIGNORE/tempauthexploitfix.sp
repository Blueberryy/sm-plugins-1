#pragma newdecls required
#pragma semicolon 1

#include <sourcemod>
#include <basecomm>

ConVar cvarDisableNonAuthedSpam;

Handle authClientTimer[MAXPLAYERS + 1];

public Plugin myinfo = {
	name = "[TF2] Temp Auth Exploit 'Fix'",
	author = "TheXeon",
	description = "Small plugin to keep non-authed outta the way.",
	version = "0.0.2",
	url = "https://www.neogenesisnetwork.net/"
}

public void OnPluginStart()
{
	cvarDisableNonAuthedSpam = CreateConVar("sm_tempfix_disable_authspam", "1", "Should players be kicked if they don't auth?");
}

public void OnClientConnected(int client)
{
	if (cvarDisableNonAuthedSpam.BoolValue && !IsFakeClient(client))
		authClientTimer[client] = CreateTimer(2.0, AuthCheckTimer, GetClientUserId(client), TIMER_REPEAT);
}

public Action AuthCheckTimer(Handle timer, int userid)
{
	int client = GetClientOfUserId(userid);
	char auth[24];
	if (!GetClientAuthId(client, AuthId_Steam2, auth, sizeof(auth)) || StrContains("STEAM_ID_STOP_IGNORING_RETVALS", auth, false) != -1)
	{
		if (IsPlayerAlive(client))
		{
			ChangeClientTeam(client, 1);
			PrintToChat(client, "Your client has not been authed, please reconnect.");
		}
		BaseComm_SetClientGag(client, true);
		BaseComm_SetClientMute(client, true);
		ServerCommand("namelockid %d 1", userid);
	}
	else
		KillTheTimer(client);
	return Plugin_Continue;
}

stock void KillTheTimer(int client)
{
	KillTimer(authClientTimer[client]);
	authClientTimer[client] = null;
}

public void OnClientDisconnect(int client)
{
	if (authClientTimer[client] != null)
	{
		KillTimer(authClientTimer[client]);
		authClientTimer[client] = null;
	}
}